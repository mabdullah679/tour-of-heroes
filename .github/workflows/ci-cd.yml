name: CI/CD Pipeline

on:
  push:
    branches:
      - main
    paths-ignore:
      - README.md
    tags-ignore:
      - "**.*"
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Check out code
        uses: actions/checkout@v2

      # Step 2: Set up Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Build and Push Docker Image
      - name: Build and Push Docker Image
        run: |
          # Build the Docker image
          docker build -t halludbam/angular-heroes-app:${{ github.sha }} .
          
          # Tag it as 'latest'
          docker tag halludbam/angular-heroes-app:${{ github.sha }} halludbam/angular-heroes-app:latest
          
          # Log in to Docker Hub
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          
          # Push both tags to Docker Hub
          docker push halludbam/angular-heroes-app:${{ github.sha }}
          docker push halludbam/angular-heroes-app:latest
      # Step 4: Stop and Remove Existing Container (if any)
      - name: Stop and Remove Existing Container
        run: |
          EXISTING_CONTAINER=$(docker ps -q -f name=angular-heroes-app) && \
          if [ ! -z "$EXISTING_CONTAINER" ]; then \
            docker stop $EXISTING_CONTAINER && docker rm $EXISTING_CONTAINER; \
          fi

      # Step 5: Run the New Docker Container
      - name: Run the New Docker Container
        run: |
          docker run -d --name angular-heroes-app -p 80:80 halludbam/angular-heroes-app:latest

      # Step 6: Reload Nginx (if applicable)
      - name: Reload Nginx
        run: |
          CONTAINER_ID=$(docker ps -qf "name=angular-heroes-app") && \
          docker exec $CONTAINER_ID nginx -s reload
      
      # Step 7: Set up Terraform and Deploy to AWS
      - name: Step 7 Setup Terraform
        # Installs a specific version of Terraform
        uses: hashicorp/setup-terraform@v2
      
      - name: Initialize Terraform
        run: terraform init
        env: 
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-2
      
      - name: Plan the Terraform script
        run: terraform plan -var="commit_sha=${{ github.sha }}
        env: 
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-2
      
      - name: Apply Terraform
        run: terraform apply
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-2